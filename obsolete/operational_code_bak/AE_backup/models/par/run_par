#!/bin/csh -f

source common

# Where temporary data is stored. (this should not need to be changed)
set tmp_dir = /tmp/run_par_$$

mkdir -p $tmp_dir
mkdir -p $ed_dir

set station_list = ( `gawk '$1!~/^#/{print $1;}' $station_file` )

# Remove initial 0 from two-digit numbers in the station file (gets interpreted as octal otherwise)
sed -i -e 's/\(\s\)0\([1-9]\)\(\s\)/\1\2\3/g' -e 's/\(\s\)0\([1-9]\)$/\1\2/gm' stations.txt

foreach station ( $station_list )
   echo Station $station
   set line = ( `gawk -vid=$station '$1==id&&$1!~/^#/{ print $2,$3,$4,$5,$6; }' $station_file` )
   set lat = $line[1]
   set lon = $line[2]
   set year = `printf '%04d' $line[3]`
   set month = `printf '%02d' $line[4]`
   set day = `printf '%02d' $line[5]`
   set julian = `julian -zeros $day $month $year`
   set jday = $julian[1]
   set year_short = `echo $year | gawk '{printf "%02d\n", $1%100;}'`
   
   which extract_C
   
   exit(0)
   
   
   # Get ECMWF Cloud data (if any)
   set C = ""
   set ecmwf_file = `glob $ecmwf_data/cloud/$year/gpsfo${year_short}${month}${day}12_CLD.8bit*`
   if ( -r $ecmwf_file ) then
      set cloud = `extract_C $lat $lon $ecmwf_file`
      set C = "--C $cloud"
   endif
   
   # Get NCEP MET data (if any)
   set P = ""
   set W = ""
   set WM = ""
   set RH = ""
   set WV = ""
   set ncep_files = `glob $met_data/$year/MODOCNMC.A{$year}{$jday}.1200.*.hdf`
   if ( $#ncep_files > 0 ) then
      set ncep = ( `read_ncep_point $lat $lon $met_data/$year/MODOCNMC.A{$year}{$jday}.1200.*.hdf | gawk '$1~/Mean/{print $0;}'` )
      if ( $ncep[7] != "NaN" ) then
         set P = "--P $ncep[7]"
      endif
      if ( $ncep[8] != "NaN" ) then
         set W = "--W $ncep[8]"
         set WM = "--WM $ncep[8]"
      endif
      if ( $ncep[9] != "NaN" ) then
         set RH = "--RH $ncep[9]"
      endif
      if ( $ncep[10] != "NaN" ) then
         set WV = "--WV $ncep[10]"
      endif
   endif

   # Get EPTOMS OZONE data (if any)
   set O_3 = ""
   set eptoms_files = `glob $ozone_data/$year/MODOCOZN.A{$year}{$jday}.0000.*.hdf`
   if ( $#eptoms_files > 0 ) then
      set eptoms = ( `read_eptoms_point $lat $lon $ozone_data/$year/MODOCOZN.A{$year}{$jday}.0000.*.hdf | gawk '$1~/Mean/{print $0;}'` )
      if ( $eptoms[6] != "NaN" ) then
         set O_3 = "--O_3 $eptoms[2]"
      endif
   endif

   set ed_file = $ed_dir/${ed_prefix}${station}${ed_suffix}

   par --atmo_read $proof_data/gcirrad.dat $C $RH $WV $P $W $WM --D $jday $O_3 \
      --lat $lat --lon $lon --wave_step $wavelength_step \
      --time_step $time_step --par $ed_file
end

rm -r $tmp_dir
