BUILD_DIR=build/$(NERCARCH)
TOP_DIR=/local1/data/scratch/blo/AlterEco/pp_models/operational

EXEC_DIR=$(TOP_DIR)/bin/$(NERCARCH)	# Destination for final built executables
LIB_DIR=$(TOP_DIR)/lib/$(NERCARCH)	# Destination for final built libraries
INC_DIR=$(TOP_DIR)/include		# Destination for include files

LINK_FLAGS=
CPP_LINK_FLAGS=
INCLUDE_DIRS=-I$(TOP_DIR)/include
LIBRARY_DIRS=-L$(TOP_DIR)/lib/$(NERCARCH)

MAKE=make
SHELL=/bin/csh
CFLAGS+= -ansi -pedantic -g -Wall -O2 -fPIC
CXXFLAGS+= -ansi -pedantic -g -Wall -O2 -fPIC

# Compile obj file from C source
CC=\gcc -fPIC $(CFLAGS) $(INCLUDE_DIRS) -c -o

# Compile obj file from C++ source
CXX=\g++ -fPIC $(CXXFLAGS) $(INCLUDE_DIRS) -c -o

# Link Executable from obj files
LINK_EXEC=\gcc $(LINK_FLAGS) $(LIBRARY_DIRS) -o

# Link Executable C++ program from obj files
LINK_EXECXX=\g++ $(LINK_FLAGS) $(LIBRARY_DIRS) -o

# Link Dynamic Library from obj files
LINK_DLIB=\gcc -fPIC -shared -o

# Link Dynamic Library C++ from obj files
LINK_DLIBXX=\g++ -fPIC -shared -o

# Link Static Library from obj files
LINK_SLIB=\ar rc

# General rules ----------------------------------
$(BUILD_DIR)/%.o: %.c
	-@echo 'Compiling $(@F) as C code for architecture "$(NERCARCH)"'
	@mkdir -p $(@D)
	$(CC) $@ $<

$(BUILD_DIR)/%.o: %.cc
	-@echo 'Compiling $(@F) as C++ code for architecture "$(NERCARCH)"'
	@mkdir -p $(@D)
	$(CXX) $@ $<
